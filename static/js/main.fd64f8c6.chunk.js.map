{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","submit","contacts","useState","name","setName","number","setNumber","reset","handleInputChange","event","target","value","action","onSubmit","preventDefault","map","contact","toLowerCase","includes","checkName","alert","type","onChange","pattern","title","required","className","Filter","ContactList","removeContact","id","onClick","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","contactFilter","newContact","shortid","generate","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIe,SAASA,EAAT,GAA4C,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SAC5C,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAkBMC,EAAQ,WACZH,EAAQ,IACRE,EAAU,KAGNE,EAAoB,SAACC,GACzB,OAAQA,EAAMC,OAAOP,MACnB,IAAK,OACHC,EAAQK,EAAMC,OAAOC,OACrB,MACF,IAAK,SACHL,EAAUG,EAAMC,OAAOC,OACvB,MACF,QACE,SAIN,OACE,uBAAMC,OAAO,GAAGC,SA7BD,SAACJ,GAChBA,EAAMK,iBAPU,SAACX,GACjB,OAAOF,EACJc,KAAI,SAACC,GAAD,OAAaA,EAAQb,KAAKc,iBAC9BC,SAASf,EAAKc,eAKbE,CAAUhB,GACZiB,MAAM,GAAD,OAAIjB,EAAJ,8BAGPH,EAAOG,EAAME,GACbE,MAsBA,UACE,yCAEE,uBACEc,KAAK,OACLlB,KAAK,OACLmB,SAAUd,EACVG,MAAOR,EACPoB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,2CAEE,uBACEJ,KAAK,MACLlB,KAAK,SACLmB,SAAUd,EACVG,MAAON,EACPkB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQJ,KAAK,SAASK,UAAU,MAAhC,4B,UCzCSC,EAvBA,SAAC,GAAyB,IAAvBhB,EAAsB,EAAtBA,MAAOW,EAAe,EAAfA,SACvB,OACE,qBAAKI,UAAU,mBAAf,SACE,wBAAOA,UAAU,eAAjB,kCAEE,uBACEA,UAAU,eACVf,MAAOA,EACPW,SAAUA,EACVD,KAAK,OACLlB,KAAK,SACLsB,UAAQ,UCqBHG,G,MAjCK,SAAC,GAAiC,IAA/B3B,EAA8B,EAA9BA,SAAU4B,EAAoB,EAApBA,cAC/B,OACE,6BACG5B,EAASc,KAAI,YAA2B,IAAxBZ,EAAuB,EAAvBA,KAAME,EAAiB,EAAjBA,OAAQyB,EAAS,EAATA,GAC7B,OACE,+BACE,uBAAMJ,UAAU,OAAhB,cAAyBvB,EAAzB,OACA,uBAAMuB,UAAU,MAAhB,cAAwBrB,KACxB,wBACEgB,KAAK,SACLK,UAAU,kBACVK,QAAS,kBAAMF,EAAcC,IAH/B,0DAHOA,U,gBCDJ,SAASE,IAAO,IAAD,EAC5B,EAAgC9B,mBAAQ,UACtC+B,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBADD,QACiB,CACrD,CAAEP,GAAI,OAAQ3B,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEyB,GAAI,OAAQ3B,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEyB,GAAI,OAAQ3B,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEyB,GAAI,OAAQ3B,KAAM,iBAAkBE,OAAQ,eALlD,mBAAOJ,EAAP,KAAiBqC,EAAjB,KAQA,EAA4BpC,mBAAS,IAArC,mBAAOqC,EAAP,KAAeC,EAAf,KAqBAC,qBAAU,WACRN,OAAOC,aAAaM,QAAQ,WAAYT,KAAKU,UAAU1C,MACtD,CAACA,IAEJ,IAAM2C,EAAgB3C,EAASsC,QAAO,SAACvB,GAAD,OACpCA,EAAQb,KAAKc,cAAcC,SAASqB,EAAOtB,kBAG7C,OACE,sBAAKS,UAAU,YAAf,UACE,4CACA,cAAC,EAAD,CAAa1B,OApBE,SAACG,EAAME,GACxB,IAAMwC,EAAa,CACjBf,GAAIgB,IAAQC,WACZ5C,OACAE,UAEFiC,GAAY,SAACU,GAAD,4BAAmBA,GAAnB,CAA8BH,QAcP5C,SAAUA,IAC3C,0CACA,cAAC,EAAD,CAAQU,MAAO4B,EAAQjB,SAhCA,SAACb,GAC1B+B,EAAU/B,EAAMC,OAAOC,UAgCrB,cAAC,EAAD,CAAaV,SAAU2C,EAAef,cA7BpB,SAACC,GACrBQ,GAAY,SAACU,GAAD,OACVA,EAAUT,QAAO,SAACvB,GAAD,OAAaA,EAAQc,KAAOA,cCnBnDmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnB,EAAD,MAEFoB,SAASC,eAAe,W","file":"static/js/main.fd64f8c6.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport \"./ContactForm.css\";\n\nexport default function ContactForm({ submit, contacts }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const checkName = (name) => {\n    return contacts\n      .map((contact) => contact.name.toLowerCase())\n      .includes(name.toLowerCase());\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (checkName(name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    submit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleInputChange = (event) => {\n    switch (event.target.name) {\n      case \"name\":\n        setName(event.target.value);\n        break;\n      case \"number\":\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form action='' onSubmit={onSubmit}>\n      <label>\n        Name\n        <input\n          type='text'\n          name='name'\n          onChange={handleInputChange}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type='tel'\n          name='number'\n          onChange={handleInputChange}\n          value={number}\n          pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\n          title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\n          required\n        />\n      </label>\n      <button type='submit' className='btn'>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  submit: PropTypes.func,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport \"./Filter.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className=\"filter-container\">\n      <label className=\"filter-lable\">\n        Find contacts by name\n        <input\n          className=\"filter-input\"\n          value={value}\n          onChange={onChange}\n          type=\"text\"\n          name=\"filter\"\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport \"./ContactList.css\";\n\nconst ContactList = ({ contacts, removeContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <li key={id}>\n            <span className=\"name\"> {name}:</span>\n            <span className=\"tel\"> {number}</span>\n            <button\n              type=\"button\"\n              className=\"contact-btn btn\"\n              onClick={() => removeContact(id)}\n            >\n              Удалить\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n  removeContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport shortid from \"shortid\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n  );\n  const [filter, setFilter] = useState(\"\");\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const removeContact = (id) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== id),\n    );\n  };\n\n  const addContact = (name, number) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    setContacts((prevState) => [...prevState, newContact]);\n  };\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const contactFilter = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  return (\n    <div className='container'>\n      <h1>Phoneboock</h1>\n      <ContactForm submit={addContact} contacts={contacts} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={handleFilterChange} />\n      <ContactList contacts={contactFilter} removeContact={removeContact} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}